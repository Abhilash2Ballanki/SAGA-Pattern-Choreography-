version: "3"
x-project_name: SAGA-Project

services:
  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
    networks:
     - saga
    

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9094:9094"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://kafka1:9094,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    restart: always
    depends_on:
      - zoo1
    networks:
     - saga
      
  mysqldb:
    container_name: mysqldb
    image: mysql:8.0
    ports:
      - '3306:3306'
    environment:
      - MYSQL_ROOT_PASSWORD=bb123
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
     - saga
    
     
  email-service:
    container_name: email-service
    restart: always
    build:
     context: EmailService
     dockerfile: Dockerfile
    ports:
      - 8080:8080
    depends_on:
      - kafka1
    networks:
     - saga
     
     
  order-service:
    container_name: order-service
    restart: always
    build:
     context: OrderService
     dockerfile: Dockerfile
    ports:
      - 8081:8081
    depends_on:
      - email-service
    networks:
     - saga
    
     
  stock-service:
    container_name: stock-service
    restart: always
    build:
     context: StockService
     dockerfile: Dockerfile
    ports:
      - 9090:9090
    depends_on:
      - email-service
    networks:
     - saga
    
     
  payment-service:
    container_name: payment-service
    restart: always
    build:
     context: PaymentService
     dockerfile: Dockerfile
    ports:
      - 7070:7070
    depends_on:
      - email-service
    networks:
     - saga
    
     
  delivery-service:
    container_name: delivery-service
    restart: always
    build:
     context: DeliveryService
     dockerfile: Dockerfile
    ports:
      - 6060:6060
    depends_on:
      - email-service
    networks:
     - saga
    
     
networks:
  saga:
    driver: bridge   

volumes:
  mysql:    
     
     
      
   
